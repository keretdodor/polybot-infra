name: Terraform CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/tf

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }} 
          mask-aws-account-id: 'no'

      - name: Terraform Init 
        run: |
          terraform init \
          -var="aws_region=${{ vars.AWS_REGION }}" \
          -var="cert_arn=${{ secrets.CERT_ARN }}" \
          -var="private_key=${{ secrets.PRIVATE_KEY }}"

      - name: Terraform Plan
        run: |
          terraform plan \
          -var="aws_region=${{ vars.AWS_REGION }}" \
          -var="cert_arn=${{ secrets.CERT_ARN }}" \
          -var="private_key=${{ secrets.PRIVATE_KEY }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply \
          -var="aws_region=${{ vars.AWS_REGION }}" \
          -var="cert_arn=${{ secrets.CERT_ARN }}" \
          -var="private_key=${{ secrets.PRIVATE_KEY }}" \
          -auto-approve

      - name: Getting the outputs
        id: tfout
        run: |
          echo "dynamodb_table_name=$(terraform output -raw dynamodb_table_name)" >> "$GITHUB_OUTPUT"
          echo "bucket_name=$(terraform output -raw bucket_name)" >> "$GITHUB_OUTPUT"
          echo "alias_record=$(terraform output -raw alias_record)" >> "$GITHUB_OUTPUT"
          echo "sqs_queue_url=$(terraform output -raw sqs_queue_url)" >> "$GITHUB_OUTPUT"
        
      - name: Terminate AMI-Image
        run: aws ec2 terminate-instances --instance-ids $(terraform output -raw ami_ip) --output json



      - name: Ansible's Inventory File Creation
        run: |
          echo "[polybot]" > inventory.ini
          for ip in $(terraform output -json polybot_public_ips | jq -r '.[]'); do
            echo "$ip ansible_user=ubuntu ansible_ssh_private_key_file=private_key.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini
          done
          cat inventory.ini
        shell: bash

      - name: Upload Inventory Using Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-inv
          path: infrastructure/tf/inventory.ini

    outputs:
      dynamodb_table_name: ${{ steps.tfout.outputs.dynamodb_table_name }}
      sqs_queue_url: ${{ steps.tfout.outputs.sqs_queue_url }}
      s3_bucket: ${{ steps.tfout.outputs.bucket_name }}
      alias_record: ${{ steps.tfout.outputs.alias_record }}
          
  ansible:
    name: Ansible Configuration
    runs-on: ubuntu-latest
    needs: terraform  

    defaults:
      run:
        working-directory: ./infrastructure/ansible/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Print Terraform Outputs
        run: |
          echo "Polybot Public IPs: ${{ needs.terraform.outputs.polybot_public_ips }}"
          echo "DynamoDB Table Name: ${{ needs.terraform.outputs.dynamodb_table_name }}"
          echo "S3 Bucket Name: ${{ needs.terraform.outputs.s3_bucket }}"
          echo "Alias Record: ${{ needs.terraform.outputs.alias_record }}"
          echo "SQS QUEUE URL: ${{ needs.terraform.outputs.sqs_queue_url }}"

      - uses: actions/download-artifact@v4
        with:
          name: ansible-inv
          path: infrastructure/ansible
      
      - name: Key File Creation
        run: |
            echo '${{ secrets.PRIVATE_KEY }}' > private_key.pem
            chmod 600 private_key.pem
    
      - name: Run Ansible Playbook
        shell: bash
        run: |
          ansible-playbook -i inventory.ini playbook.yaml --private-key private_key.pem \
          --extra-vars "dynamodb_table_name=${{ needs.terraform.outputs.dynamodb_table_name }} \
          sqs_queue_url=${{ needs.terraform.outputs.sqs_queue_url }} \
          bucket_name=${{ needs.terraform.outputs.s3_bucket }} \
          alias_record=${{ needs.terraform.outputs.alias_record }} \
          aws_region=${{ vars.AWS_REGION }}"
